@using MudBlazor
@using System.Security.Claims
@using OrderDeliverySystem.Client.Infrastructure.Services.Profile
@using OrderDeliverySystem.Share.DTOs
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IAuthorizationService AuthorizationService
@inject NavigationManager NavigationManager
@inject IAddressService AddressService
@rendermode InteractiveAuto

<MudDialog>
    <DialogContent>
            <EditForm Model="@model" OnValidSubmit="HandleCreateAddress" FormName="addressForm">
                    @if (ShowErrors)
                    {
                        <ErrorsList ShowErrors="ShowErrors" Errors="Errors" />
                    }
                   
                    @if (!SuccessMessage.Equals(""))
                    {
                        <MudAlert Severity="Severity.Success" Variant="Variant.Outlined">@SuccessMessage</MudAlert>
                    }
                  
                <DataAnnotationsValidator />
                <MudGrid>
                    <MudItem xs="12" Class="d-flex justify-content-center">
                        <div class="object-center">
                            <MudGrid>
                                <MudItem xs="2">
                                    <MudField Label="Contact Name:" AlignLabel="Align.Start" Underline="false" />
                                </MudItem>
                                <MudItem xs="8">
                                    <MudField Underline="false">
                                    <MudTextField id="contactName" @bind-Value="model.ContactName" For="@(() => model.ContactName)" Variant="Variant.Filled" />
                                    </MudField>
                                </MudItem>
                                <MudItem xs="2">
                                </MudItem>

                                <MudItem xs="2">
                                    <MudField Label="Phone:" AlignLabel="Align.Start" Underline="false" />
                                </MudItem>
                                <MudItem xs="8">
                                    <MudField Underline="false">
                                        <MudTextField id="phone" @bind-Value="model.Phone" For="@(() => model.Phone)" Variant="Variant.Filled" />
                                    </MudField>
                                </MudItem>
                                <MudItem xs="2">
                                </MudItem>

                                <MudItem xs="2">
                                    <MudField Label="Type:" AlignLabel="Align.Start" Underline="false" />
                                </MudItem>
                                <MudItem xs="8">
                                    <MudField Underline="false">
                                        <MudTextField id="unit" @bind-Value="model.Type" For="@(() => model.Type)" Variant="Variant.Filled" />
                                    </MudField>
                                </MudItem>
                                <MudItem xs="2">
                                </MudItem>
                                    

                                <MudItem xs="2">
                                    <MudField Label="Unit:" AlignLabel="Align.Start" Underline="false" />
                                </MudItem>
                                <MudItem xs="8">
                                    <MudField Underline="false">
                                        <MudTextField id="unit" @bind-Value="model.Unit" For="@(() => model.Unit)" Variant="Variant.Filled" />
                                    </MudField>
                                </MudItem>
                                <MudItem xs="2">
                                </MudItem>

                                <MudItem xs="2">
                                    <MudField Label="Address:" AlignLabel="Align.Start" Underline="false" />
                                </MudItem>
                                <MudItem xs="8">
                                    <MudField Underline="false">
                                        <MudTextField id="address" @bind-Value="model.Address" For="@(() => model.Address)" Variant="Variant.Filled" />
                                    </MudField>
                                </MudItem>
                                <MudItem xs="2">
                                </MudItem>

                                <MudItem xs="2">
                                    <MudField Label="City:" AlignLabel="Align.Start" Underline="false" />
                                </MudItem>
                                <MudItem xs="8">
                                    <MudField Underline="false">
                                        <MudTextField id="city" @bind-Value="model.City" For="@(() => model.City)" Variant="Variant.Filled" />
                                    </MudField>
                                </MudItem>
                                <MudItem xs="2">
                                </MudItem>

                                <MudItem xs="2">
                                    <MudField Label="Province:" AlignLabel="Align.Start" Underline="false" />
                                </MudItem>
                                <MudItem xs="8">
                                    <MudField Underline="false">
                                        <MudTextField id="province" @bind-Value="model.Province" For="@(() => model.Province)" Variant="Variant.Filled" />
                                    </MudField>
                                </MudItem>
                                <MudItem xs="2">
                                </MudItem>

                                <MudItem xs="2">
                                    <MudField Label="Postcode:" AlignLabel="Align.Start" Underline="false" />
                                </MudItem>
                                <MudItem xs="8">
                                    <MudField Underline="false">
                                        <MudTextField id="postcode" @bind-Value="model.Postcode" For="@(() => model.Postcode)" Variant="Variant.Filled" />
                                    </MudField>
                                </MudItem>
                                <MudItem xs="2">
                                </MudItem>
                            </MudGrid>
                        </div>
                    </MudItem>

                    <MudItem xs="12" Class="d-flex justify-content-start">
                        <MudButton Class="m-2" ButtonType="ButtonType.Submit" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Save" Color="Color.Error">Create Address</MudButton>
                        <MudButton Class="m-2" ButtonType="ButtonType.Reset" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.LockReset" Color="Color.Primary">Reset</MudButton>
                    </MudItem>
                </MudGrid>
            </EditForm>
        </DialogContent>
</MudDialog>
@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }

    private ClaimsPrincipal user;

    private AddressCreateDTO model = new();

    public bool ShowErrors { get; set; } = false;
    public string SuccessMessage { get; set; } = "";
    public string Errors { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        user = authState.User;
    }

    private async Task HandleCreateAddress()
    {
        var result = await AddressService.CreateAddress(model);

        if (result.Succeeded)
        {
            MudDialog.Close(DialogResult.Ok(true));
        }
        else
        {
            Errors = result.Error;
            ShowErrors = true;
        }
    }
}
