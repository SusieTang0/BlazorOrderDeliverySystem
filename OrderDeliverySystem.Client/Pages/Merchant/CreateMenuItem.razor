<h3>CreateMenuItem</h3>
@page "/createMenuItem"
@inject HttpClient Http
@inject ISnackbar Snackbar
@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager Navigation
@inject IAuthService AuthService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ItemService ItemService

@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@using MudBlazor
@using System.Net.Http.Json
@using OrderDeliverySystem.Share.DTOs
@using OrderDeliverySystem.Share.Data.Models
@using OrderDeliverySystem.Client.Infrastructure.Services.Authentication
@using OrderDeliverySystem.Share.Data
@using System.Net.Http.Headers
@using Microsoft.AspNetCore.Authorization
@rendermode InteractiveServer
@using OrderDeliverySystem.Client.Infrastructure.Extensions
@using OrderDeliverySystem.Client.Infrastructure.Services.Item
@using OrderDeliverySystem.Client.Shared.Common

@if (isAuthorized)
{
    <MudPaper Class="pa-4">
        <MudText Typo="Typo.h5">Create New Menu Item</MudText>

        <EditForm Model="@newItem" OnValidSubmit="CreateItem">
            <ErrorsList ShowErrors="ShowErrors" Errors="Errors" />
            <MudTextField @bind-Value="newItem.ItemName" Label="Item Name" Required="true" />
            <MudTextField @bind-Value="newItem.ItemDescription" Label="Description" />
            <MudNumericField @bind-Value="newItem.ItemPrice" Label="Price" Required="true" />
            <MudTextField @bind-Value="newItem.ItemPic" Label="Image URL" />
            <MudSwitch @bind-Checked="newItem.ItemIsAvailable" Label="Available" T="bool" />

            <MudButton Type="Submit" Variant="Variant.Filled" Color="Color.Primary" >Submit</MudButton>
            @* <MudButton Type="button" Variant="Variant.Filled" Color="Color.Secondary" >Reset</MudButton> *@
            <MudButton Type="button" Variant="Variant.Filled" Color="Color.Secondary" OnClick="ResetForm">Reset</MudButton>
        </EditForm>

        <MudSnackbarProvider />
    </MudPaper>
} else
{
    <MudText Typo="Typo.h5" Color="Color.Error">Unauthorized: You do not have permission to create items.</MudText>
}

@code { 
    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }
    private CreateItemDTO newItem = new CreateItemDTO();
    private bool isAuthorized = false;
    private string token;
    private ClaimsPrincipal user;

    public bool ShowErrors { get; set; } = false;
    public IEnumerable<string> Errors { get; set; } = new List<string>();

    protected override async Task OnInitializedAsync()
    {   
        var authState = await authenticationState;
        user = authState.User;
    }


    private async Task CreateItem()
    {

       

        var result = await this.ItemService.CreateMenuItem(newItem); // Update customer data


        if (result.Succeeded)
        {
            ShowErrors = false;
        }
        else
        {
            Errors = result.Errors;
            ShowErrors = true;
        }
       
       
    }

    private void ResetForm()
    {
        newItem = new CreateItemDTO();
    }

}
